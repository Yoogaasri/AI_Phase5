import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
# Load dataset
data = pd.read_csv("diabetes_dataset.csv")

# Handle missing data
data = data.dropna()
# Split into features and target
X = data.drop("Outcome", axis=1)
y = data["Outcome"]
# Normalize numerical features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
# Encode categorical variables if any
# ...
# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
from sklearn.feature_selection import SelectKBest, f_classif
# Select top k features based on ANOVA F-statistic
k_best = SelectKBest(score_func=f_classif, k=5)
X_train_selected = k_best.fit_transform(X_train, y_train)
X_test_selected = k_best.transform(X_test)
from sklearn.linear_model import LogisticRegression
# Create and train the model
model = LogisticRegression()
model.fit(X_train_selected, y_train)
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
# Make predictions
y_pred = model.predict(X_test_selected)
# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)
matrix = confusion_matrix(y_test, y_pred)
